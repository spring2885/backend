# Spring2885 API Description.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.1"
  title: NDNU Community Access API
  description: An API for the Spring2885 FrontEnd.
  contact: 
    name: Spring2885 Backend Development Team
    email: api@spring-2885.org
    url: https://github.com/rob2885/backend
  

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /persons:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `person` objects.
        Optional query param of **size** determines
        size of returned array
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: size
          in: query
          description: Size of array
          required: true
          type: number
          format: double
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: array
            items:
              $ref: '#/definitions/person'
    post:
      parameters:
        - name: person
          in: body
          description: The person you want to post
          schema:
            $ref: '#/definitions/person'
          required: true
      responses:
        200:
          description: Make a new person
    put:
      parameters:
        - name: person
          in: body
          description: The person you want to update
          schema:
            $ref: '#/definitions/person'
          required: true
      responses:
        200:
          description: Updates the person
  /jobs:
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `Job` objects.
        Optional query param of **size** determines
        size of returned array
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        -
          name: size
          in: query
          description: Size of array
          required: true
          type: number
          format: double
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
    post:
      parameters:
        - name: Job
          in: body
          description: The Job you want to post
          schema:
            $ref: '#/definitions/Job'
          required: true
      responses:
        200:
          description: Make a new Job
    put:
      parameters:
        - name: job
          in: body
          description: The Job you want to update
          schema:
            $ref: '#/definitions/Job'
          required: true
      responses:
        200:
          description: Updates the Job
definitions:
  person:
    type: object
    properties:
      id: 
        type: integer
        format: int64
      username:
        type: string
      profile picture:
        type: object
      firstname:
        type: string
      lastname:
        type: string
      email: 
        type: string
      phone:
        type: string
      birthdate:
        type: object
      occupation:
        type: string
      last_login_date:
        type: object
      variety:
        type: string #as in alum, faculty, student
  Job:
    type: object
    properties:
      id: 
        type: integer
        format: int64
      description:
        type: string
      job_type:
        type: string
  News:
    type: object
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
      news title:
        type: string
      
