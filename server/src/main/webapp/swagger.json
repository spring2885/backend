{
  "swagger" : "2.0",
  "info" : {
    "description" : "An API for the Spring2885 FrontEnd.",
    "version" : "0.0.1",
    "title" : "NDNU Community Access API",
    "contact" : {
      "name" : "Spring2885 Backend Development Team",
      "url" : "https://github.com/spring2885/backend",
      "email" : "team@spring-2885.org"
    }
  },
  "tags" : [ {
    "name" : "User",
    "description" : "Everything to do with User"
  }, {
    "name" : "Profiles",
    "description" : "Fetch, Delete, and update Profiles"
  }, {
    "name" : "Reset",
    "description" : "Everything used for resetting password"
  }, {
    "name" : "Jobs",
    "description" : "Everything to do with Jobs"
  }, {
    "name" : "News",
    "description" : "Everything to do with News"
  }, {
    "name" : "PersonType",
    "description" : "Everything to do with Person Type"
  } ],
  "paths" : {
    "/api/v1/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Gets `Job` objects.\nOptional query param of **size** determines\nsize of returned array\n",
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "description" : "Size of array",
          "required" : false,
          "type" : "number",
          "format" : "double"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Job"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Jobs" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Job",
          "description" : "The Job you want to post",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Job"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Make a new Job"
          }
        }
      }
    },
    "/api/v1/jobs/{id}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Fetches the `job` for id `id`.\n",
        "description" : "Gets `Job` objects.\nOptional query param of **size** determines\nsize of returned array\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the job to fetch",
          "required" : true,
          "type" : "number",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Job"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "summary" : "The job to update.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the Job you want to update",
          "required" : true,
          "type" : "number",
          "format" : "in64"
        }, {
          "in" : "body",
          "name" : "job",
          "description" : "The Job you want to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Job"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updates the Job"
          }
        }
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "summary" : "The job to delete.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The job to delete.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Updates the person."
          },
          "500" : {
            "description" : "Error deleting the profile \"ID\"."
          }
        }
      }
    },
    "/api/v1/jobtype" : {
      "get" : {
        "tags" : [ "JobType" ],
        "description" : "Gets `JobType` objects.\nOptional querry param of **size** determines\nsize of return array\n",
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "description" : "Size of array",
          "required" : false,
          "type" : "number",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobType"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "JobType" ],
        "description" : "",
        "parameters" : [ {
          "in" : "body",
          "name" : "JobType",
          "description" : "The JobType you want to post",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JobType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Makes a new JobType"
          }
        }
      }
    },
    "/api/v1/jobtype/{id}" : {
      "get" : {
        "tags" : [ "JobType" ],
        "description" : "Retrives a jobtype entry\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "a single jobtype entry",
          "required" : true,
          "type" : "number",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Sucussful deletion",
            "schema" : {
              "$ref" : "#/definitions/JobType"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "JobType" ],
        "summary" : "The jobtype to update\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the News to be update.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "jobtype",
          "description" : "The jobtype item you want to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JobType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes jobtype"
          },
          "500" : {
            "description" : "Error with deleting jobtype by id."
          }
        }
      },
      "delete" : {
        "tags" : [ "JobType" ],
        "summary" : "The jobtype to delete\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The jobtype to be deleted.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes jobtype"
          },
          "500" : {
            "description" : "Error with deleting jobtype by id."
          }
        }
      }
    },
    "/api/v1/news" : {
      "get" : {
        "tags" : [ "News" ],
        "description" : "Gets `News` objects.\nOptional querry param of **size** determines\nsize of return array\n",
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "description" : "Size of array",
          "required" : false,
          "type" : "number",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/News"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "News" ],
        "description" : "",
        "parameters" : [ {
          "in" : "body",
          "name" : "News",
          "description" : "The News you want to post",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/News"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Makes a new News"
          }
        }
      }
    },
    "/api/v1/news/{id}" : {
      "get" : {
        "tags" : [ "News" ],
        "description" : "Retrives a News entry\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "a single News entry",
          "required" : true,
          "type" : "number",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Sucussful deletion",
            "schema" : {
              "$ref" : "#/definitions/News"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "News" ],
        "summary" : "The News to update\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the News to be update.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "news",
          "description" : "The News item you want to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/News"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes News"
          },
          "500" : {
            "description" : "Error with deleting News by id."
          }
        }
      },
      "delete" : {
        "tags" : [ "News" ],
        "summary" : "The News to delete\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The News to be deleted.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes News"
          },
          "500" : {
            "description" : "Error with deleting News by id."
          }
        }
      }
    },
    "/api/v1/persontype" : {
      "get" : {
        "tags" : [ "PersonType" ],
        "summary" : "Fetches all 'persontype' objects\n",
        "description" : "Fetches all 'person type' objects. up to a 'size' if specified,\notherwise fetches all objects.\n",
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "description" : "The maximum number of persontypes to fetch",
          "required" : false,
          "type" : "number",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets persontypes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PersonType"
              }
            }
          },
          "500" : {
            "description" : "Error getting persontypes"
          }
        }
      },
      "post" : {
        "tags" : [ "PersonType" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "PersonType",
          "description" : "The persontype you want to post",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Creates a new persontype in the system"
          },
          "500" : {
            "description" : "Error creating persontype."
          }
        }
      }
    },
    "/api/v1/persontype/{id}" : {
      "get" : {
        "tags" : [ "PersonType" ],
        "summary" : "Fetches the 'person type' for id 'id'.\n",
        "description" : "",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the person type to fetch",
          "required" : true,
          "type" : "number",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/PersonType"
            }
          },
          "500" : {
            "description" : "error getting persontype with id 'id'"
          }
        }
      },
      "put" : {
        "tags" : [ "PersonType" ],
        "summary" : "The persontype to update\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the persontype to fetch.",
          "required" : true,
          "type" : "number",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "name",
          "description" : "The type to update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updates the persontype."
          }
        }
      },
      "delete" : {
        "tags" : [ "PersonType" ],
        "summary" : "The persontype to delete.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The persontype to delete.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deletes the persontype.",
            "schema" : {
              "$ref" : "#/definitions/PersonType"
            }
          },
          "500" : {
            "description" : "Error deleting the persontype \"ID\"."
          }
        }
      }
    },
    "/api/v1/profiles" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Fetches all `profile` objects\n",
        "description" : "Fetches all `profile` objects. up to `size` if specified,\notherwise fetches all objects.\n",
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "description" : "The maxinum number of profiles to fetch.",
          "required" : false,
          "type" : "number",
          "format" : "int32"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "## Basic query string.\n### Format:\n  ```?q=search terms```\n\n### Example:\n  ```?q=Oracle```\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "aq",
          "in" : "query",
          "description" : "## Advanced query string.\n### Format:\n  ```?aq=(attribute OP term),...```\n\n### Example:\n  ```?aq=graduation_year>2000,occupation:manager```\n\n### Available OPs:\n  * ':' for equality\n  * '!' for not\n  * '>' greater than\n  * '<' less than\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Person"
              }
            }
          }
        }
      }
    },
    "/api/v1/profiles/{id}" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "summary" : "Fetches the `profile` for id `id`.\n",
        "description" : "",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the profile to fetch",
          "required" : true,
          "type" : "number",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Person"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profiles" ],
        "summary" : "The profile to update.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the profile to fetch",
          "required" : true,
          "type" : "number",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "person",
          "description" : "The profile to update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Person"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updates the person"
          }
        }
      },
      "delete" : {
        "tags" : [ "Profiles" ],
        "summary" : "The profile to delete.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The profile to delete.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Updates the person."
          },
          "500" : {
            "description" : "Error deleting the profile \"ID\"."
          }
        }
      }
    },
    "/auth/forgot" : {
      "post" : {
        "tags" : [ "Reset" ],
        "description" : "sends a request for a new password\n",
        "parameters" : [ {
          "name" : "email",
          "in" : "formData",
          "description" : "the email the user wants a new password for.",
          "required" : true,
          "type" : "string",
          "format" : "email"
        } ],
        "responses" : {
          "200" : {
            "description" : "request for new password sent.",
            "schema" : {
              "$ref" : "#/definitions/Reset"
            }
          },
          "500" : {
            "description" : "error requesting for a password"
          }
        }
      }
    },
    "/auth/reset" : {
      "post" : {
        "tags" : [ "Reset" ],
        "description" : "setting new password for users email\n",
        "parameters" : [ {
          "name" : "email",
          "in" : "formData",
          "description" : "the email the user wants a new password for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "formData",
          "description" : "the unique password token generated for the user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newPassword",
          "in" : "formData",
          "description" : "the new password the user wnats to set.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "new password set.",
            "schema" : {
              "$ref" : "#/definitions/Reset"
            }
          },
          "500" : {
            "description" : "error setting new password"
          }
        }
      }
    },
    "/newuser" : {
      "post" : {
        "tags" : [ "User" ],
        "description" : "",
        "parameters" : [ {
          "name" : "email",
          "in" : "formData",
          "description" : "The email address to use for the new person.",
          "required" : true,
          "type" : "string",
          "format" : "email"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "the unencrypted password to use",
          "required" : true,
          "type" : "string",
          "format" : "password"
        } ],
        "responses" : {
          "200" : {
            "description" : "Creates a new person in the system."
          },
          "500" : {
            "description" : "An error creating the user."
          }
        }
      }
    }
  },
  "definitions" : {
    "SocialConnection" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "Person" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "student_id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "title" : {
          "type" : "string"
        },
        "about_me" : {
          "type" : "string"
        },
        "resume_url" : {
          "type" : "string"
        },
        "image_url" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "occupation" : {
          "type" : "string"
        },
        "company_name" : {
          "type" : "string"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date"
        },
        "variety" : {
          "type" : "string"
        },
        "last_login_date" : {
          "type" : "string",
          "format" : "date"
        },
        "social_connections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SocialConnection"
          }
        },
        "lang" : {
          "type" : "string"
        },
        "degree_major" : {
          "type" : "string"
        },
        "degree_minor" : {
          "type" : "string"
        },
        "graduation_year" : {
          "type" : "integer",
          "format" : "int32"
        },
        "degree_type" : {
          "type" : "string"
        },
        "faculty_department" : {
          "type" : "string"
        }
      }
    },
    "Job" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "description" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "start_date" : {
          "type" : "string",
          "format" : "date"
        },
        "end_date" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "News" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "posted" : {
          "type" : "string",
          "format" : "date"
        },
        "expired" : {
          "type" : "string",
          "format" : "date"
        },
        "posted_by" : {
          "type" : "string",
          "format" : "email"
        },
        "views" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Reset" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        },
        "new_password" : {
          "type" : "string"
        }
      }
    },
    "PersonType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "JobType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    }
  }
}